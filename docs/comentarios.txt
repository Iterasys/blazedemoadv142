Nós já aprendemos a usar Selenium em algumas abordagens:
- Gravação e execução com o Selenium IDE
- Adaptar a gravação com o Selenium WebDriver
- Criar nosso próprios scripts simples por programação

Em um projeto simples, cada teste é um arquivo

Agora vamos aprender abordagens úteis em projetos com vida útil maior:

Projeto utilizando a abordagem BDD (Behavior Driven Development)
- Desenvolvimento Direcionado por Comportamento
--> Foco do BDD é melhorar a comunicação do time
--> Usar um plugin / framework chamado Cucumber (Pepino)
--> Seguir a sintaxe Gherkin (picles de pepino)

Um teste será composto por 2 arquivos:
- arquivo de negócio, escrito em Gherkin (.feature)
- arquivo de automação, que faz referência ao .feature (.java)

Projeto utilizando a abordagem Page Objects / Page Factory
- Pode usar ou não BDD
--> Foco na manutenção e reaproveitamento de longo prazo
--> Útil para projetos com Ciclo de Vida de Desenvolvimento de Software Longos
    (CVDS/SDLC)

Um teste vão ser vários arquivos...
- um arquivo de mapeamento para cada página ou região da página (*Page.java)
- um arquivo de CommomPage para tudo que há em comum nos mapeamentos
- um arquivo chamado base para definir o Selenium que vai ser compartilhado
(bola)
- pode ter um arquivo de negócio, escrito em Gherkin (.feature)
- um arquivo de automação, que faz referência ao .feature (.java) e ao mapeamento
por projeto:
- um arquivo de hooks (Before e After centralizados)
- um arquivo runner (executar o teste / maestro)